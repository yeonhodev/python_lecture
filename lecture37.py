#튜플은 파이썬에서 많이 이용하는 자료형
#대괄호가 아닌 소괄호로 선언 -> 한 번 선언하면 값을 바꿀 수 없음

a = (1, 2, 3, 4)
print(a[0])
print(a[1])
print(a[2])
print(a[3])

[b, c] = [10, 20]
(d, e) = (30, 40)
print(b, c, d, e)

#괄호가 없어도 튜플로 인식될 수 있다면 튜플
f, g = 50, 60
print(f, g)

#튜플을 사용하는 경우 2; 스왑
h, i = 70, 80
print(h, i)
#간단히 스왑하는 방법 "="의 왼쪽과 오른쪽 모두 튜플임
h, i = i, h
print(h, i)

#튜플을 사용하는 경우 3; 튜플을 리턴하는 함수
j, k = 97, 40
#몫을 구하는 방법
print(j // k)
#나머지를 구하는 방법
print(j % k)

#몪과 나머지를 한번에 구하는 함수
print(divmod(j, k))
print(type(divmod(j, k)))
quotient, remainder = divmod(j, k)
print(quotient)
print(remainder)

#아래 for 문의 i와 value 또한 튜플이다. -> 괄호가 생략된 것.
for i, value in enumerate([1, 2, 3, 4, 5, 6]):
    print("{}번째 요소는 {}입니다.".format(i, value))

#튜플을 리턴하는 함수를 만들기
def test():
    return 10, 20

#이후에 어떠한 값 두개를 한꺼번에 출력해야 할 때 사용하면 됨
l, m = test()
print(l, m)

#요소가 하나 있는 리스트
print([273])
print(type([273]))
#요소가 하나 있는 튜플; 아래 예 안에 있는 괄호는 튜플의 괄호가 아닌 그냥 괄호로 취급되어 생략 가능한 것으로 여겨지기 때문에 자료 형태가 튜플이 아닌 정수로 출력된다.
print((273))
print(type((273)))
#요소가 하나 있는 튜플을 출력하고 싶다면 아래와 같이 쉼표를 하나 찍어야 함
#쉼표가 찍혀 있다고 요소가 두개인 튜플이 아니라 요소는 하나 뿐인 튜플임
print((273, ))
print(type((273, )))

#딕셔너리의 키로 사용 가능한 것들; 숫자, 문자열, 불, 그리고 튜플; 리스트는 안됨
#튜플이 키로 들어있는 딕셔너리의 예; 좌표 형태로
n = {
    (0, 0): 10, 
    (0, 1): 20, 
    (1, 0): 30, 
    (1, 1): 40
}

print(n[(0, 0)])
#튜플은 괄호가 생략 가능하므로 아래와 같은 형태로도 출력 가능
print(n[0, 0])